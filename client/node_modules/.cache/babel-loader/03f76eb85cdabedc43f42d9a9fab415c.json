{"ast":null,"code":"var _jsxFileName = \"F:\\\\PROJEKTY WWW\\\\MERN_15\\\\client\\\\src\\\\components\\\\PostsList.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { selectAllPosts, getPostsStatus, getPostsError, fetchPosts } from '../features/posts/postsSlice';\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport PostExcerpt from \"./PostExcerpt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostsList = () => {\n  _s();\n\n  const POSTS_URL2 = 'http://localhost:5000/api/posts';\n\n  const fetchPosts2 = async () => {\n    try {\n      const response = await axios.get(POSTS_URL2);\n      console.log(response);\n      return response.data;\n    } catch (error) {\n      return error.message;\n    }\n  };\n\n  const dispatch = useDispatch();\n  const posts = useSelector(selectAllPosts);\n  const postsStatus = useSelector(getPostsStatus);\n  const postsError = useSelector(getPostsError);\n  useEffect(() => {\n    if (postsStatus === 'idle') {\n      dispatch(fetchPosts());\n    }\n\n    console.log('ponizej fetchPosts2');\n    fetchPosts2();\n  }, [postsStatus, dispatch]);\n  let postsContent;\n\n  switch (postsStatus) {\n    case 'loading':\n      postsContent = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\\"Loading...\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'succeeded':\n      postsContent = posts.map(post => /*#__PURE__*/_jsxDEV(PostExcerpt, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 47\n      }, this));\n      break;\n\n    case 'failed':\n      postsContent = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: postsError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 28\n      }, this);\n      break;\n\n    default:\n      postsContent = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\\"Loading...default\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 28\n      }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"*** PostsList ***\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), postsContent, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"*** End of PostsList ***\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostsList, \"Kjd1iRXsgoh69MqtH7hH99c7uD8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = PostsList;\nexport default PostsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsList\");","map":{"version":3,"names":["useSelector","useDispatch","useEffect","selectAllPosts","getPostsStatus","getPostsError","fetchPosts","createAsyncThunk","axios","PostExcerpt","PostsList","POSTS_URL2","fetchPosts2","response","get","console","log","data","error","message","dispatch","posts","postsStatus","postsError","postsContent","map","post","id"],"sources":["F:/PROJEKTY WWW/MERN_15/client/src/components/PostsList.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\"\r\nimport { useEffect } from \"react\"\r\nimport {selectAllPosts, getPostsStatus, getPostsError, fetchPosts} from '../features/posts/postsSlice'\r\n\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport axios from \"axios\"\r\n\r\nimport PostExcerpt from \"./PostExcerpt\"\r\n\r\n\r\n\r\nconst PostsList = () => {\r\n\r\n    const POSTS_URL2 = 'http://localhost:5000/api/posts'\r\n\r\n    const fetchPosts2 = async () => {\r\n        try {\r\n            const response = await axios.get(POSTS_URL2)\r\n            console.log(response)\r\n            return response.data\r\n        } catch (error) {\r\n            return error.message\r\n        }\r\n    }\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const posts = useSelector(selectAllPosts)\r\n    const postsStatus = useSelector(getPostsStatus)\r\n    const postsError = useSelector(getPostsError)\r\n\r\n    useEffect(() => {\r\n        if (postsStatus === 'idle') {\r\n            dispatch(fetchPosts())\r\n        }\r\n        console.log('ponizej fetchPosts2')\r\n        fetchPosts2()\r\n        \r\n\r\n    }, [postsStatus, dispatch])\r\n\r\n\r\n\r\n    let postsContent\r\n    switch (postsStatus) {\r\n        case 'loading':\r\n            postsContent = <p>\"Loading...\"</p>\r\n            break\r\n        case 'succeeded':\r\n            postsContent = posts.map( post => <PostExcerpt key = {post.id} post = {post}/>)\r\n            break\r\n        case 'failed':\r\n            postsContent = <p>{postsError}</p>\r\n            break\r\n        default:\r\n            postsContent = <p>\"Loading...default\"</p>\r\n           \r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <article>\r\n\r\n       \r\n        <h2>*** PostsList ***</h2>\r\n        {postsContent}\r\n        <h2>*** End of PostsList ***</h2>\r\n       \r\n        </article>\r\n\r\n\r\n\r\n    )\r\n} \r\n\r\nexport default PostsList"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAAQC,cAAR,EAAwBC,cAAxB,EAAwCC,aAAxC,EAAuDC,UAAvD,QAAwE,8BAAxE;AAEA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;;AAIA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAEpB,MAAMC,UAAU,GAAG,iCAAnB;;EAEA,MAAMC,WAAW,GAAG,YAAY;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAUH,UAAV,CAAvB;MACAI,OAAO,CAACC,GAAR,CAAYH,QAAZ;MACA,OAAOA,QAAQ,CAACI,IAAhB;IACH,CAJD,CAIE,OAAOC,KAAP,EAAc;MACZ,OAAOA,KAAK,CAACC,OAAb;IACH;EACJ,CARD;;EAWA,MAAMC,QAAQ,GAAGnB,WAAW,EAA5B;EAEA,MAAMoB,KAAK,GAAGrB,WAAW,CAACG,cAAD,CAAzB;EACA,MAAMmB,WAAW,GAAGtB,WAAW,CAACI,cAAD,CAA/B;EACA,MAAMmB,UAAU,GAAGvB,WAAW,CAACK,aAAD,CAA9B;EAEAH,SAAS,CAAC,MAAM;IACZ,IAAIoB,WAAW,KAAK,MAApB,EAA4B;MACxBF,QAAQ,CAACd,UAAU,EAAX,CAAR;IACH;;IACDS,OAAO,CAACC,GAAR,CAAY,qBAAZ;IACAJ,WAAW;EAGd,CARQ,EAQN,CAACU,WAAD,EAAcF,QAAd,CARM,CAAT;EAYA,IAAII,YAAJ;;EACA,QAAQF,WAAR;IACI,KAAK,SAAL;MACIE,YAAY,gBAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAf;MACA;;IACJ,KAAK,WAAL;MACIA,YAAY,GAAGH,KAAK,CAACI,GAAN,CAAWC,IAAI,iBAAI,QAAC,WAAD;QAA6B,IAAI,EAAIA;MAArC,GAAoBA,IAAI,CAACC,EAAzB;QAAA;QAAA;QAAA;MAAA,QAAnB,CAAf;MACA;;IACJ,KAAK,QAAL;MACIH,YAAY,gBAAG;QAAA,UAAID;MAAJ;QAAA;QAAA;QAAA;MAAA,QAAf;MACA;;IACJ;MACIC,YAAY,gBAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAf;EAXR;;EAiBA,oBAEI;IAAA,wBAGA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHA,EAICA,YAJD,eAKA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALA;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAcH,CAjED;;GAAMd,S;UAeeT,W,EAEHD,W,EACMA,W,EACDA,W;;;KAnBjBU,S;AAmEN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}