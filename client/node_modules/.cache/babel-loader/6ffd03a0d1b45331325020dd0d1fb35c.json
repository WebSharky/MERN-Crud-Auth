{"ast":null,"code":"var _jsxFileName = \"F:\\\\PROJEKTY WWW\\\\MERN_15\\\\client\\\\src\\\\components\\\\PostsList.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { selectAllPosts, getPostsStatus, getPostsError, fetchPosts } from '../features/posts/postsSlice';\nimport Spinner from \"./Spinner\";\nimport SinglePost from \"./SinglePost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostsList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const posts = useSelector(selectAllPosts);\n  const reversedPosts = [...posts].reverse();\n  const postsStatus = useSelector(getPostsStatus);\n  const postsError = useSelector(getPostsError);\n  useEffect(() => {\n    if (postsStatus === 'idle') {\n      dispatch(fetchPosts());\n    }\n  }, [postsStatus, dispatch]);\n  let postsContent;\n\n  switch (postsStatus) {\n    case 'loading':\n      postsContent = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'succeeded':\n      postsContent = reversedPosts.map(post => /*#__PURE__*/_jsxDEV(SinglePost, {\n        post: post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 55\n      }, this));\n      break;\n\n    case 'failed':\n      postsContent = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: postsError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 28\n      }, this);\n      break;\n\n    default:\n      postsContent = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 28\n      }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: postsContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostsList, \"Kjd1iRXsgoh69MqtH7hH99c7uD8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = PostsList;\nexport default PostsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsList\");","map":{"version":3,"names":["useSelector","useDispatch","useEffect","selectAllPosts","getPostsStatus","getPostsError","fetchPosts","Spinner","SinglePost","PostsList","dispatch","posts","reversedPosts","reverse","postsStatus","postsError","postsContent","map","post","_id"],"sources":["F:/PROJEKTY WWW/MERN_15/client/src/components/PostsList.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\"\r\nimport { useEffect } from \"react\"\r\nimport {selectAllPosts, getPostsStatus, getPostsError, fetchPosts} from '../features/posts/postsSlice'\r\nimport Spinner from \"./Spinner\"\r\nimport SinglePost from \"./SinglePost\"\r\n\r\n\r\n\r\nconst PostsList = () => {\r\n\r\n  \r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const posts = useSelector(selectAllPosts)\r\n    const reversedPosts = [...posts].reverse()\r\n    const postsStatus = useSelector(getPostsStatus)\r\n    const postsError = useSelector(getPostsError)\r\n\r\n  \r\n    useEffect(() => {\r\n        if (postsStatus === 'idle') {\r\n            dispatch(fetchPosts())\r\n        }\r\n    }, [postsStatus, dispatch])\r\n\r\n\r\n\r\n\r\n    let postsContent\r\n    switch (postsStatus) {\r\n        case 'loading':\r\n            postsContent = <Spinner />\r\n            break\r\n        case 'succeeded':\r\n            postsContent = reversedPosts.map( post => <SinglePost key = {post._id} post = {post}/>)\r\n            break\r\n        case 'failed':\r\n            postsContent = <p>{postsError}</p>\r\n            break\r\n        default:\r\n            postsContent = <Spinner />\r\n           \r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n       \r\n       \r\n        {postsContent}\r\n       \r\n       \r\n        </div>\r\n\r\n\r\n\r\n    )\r\n} \r\n\r\nexport default PostsList"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAAQC,cAAR,EAAwBC,cAAxB,EAAwCC,aAAxC,EAAuDC,UAAvD,QAAwE,8BAAxE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAIA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAKpB,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;EAEA,MAAMU,KAAK,GAAGX,WAAW,CAACG,cAAD,CAAzB;EACA,MAAMS,aAAa,GAAG,CAAC,GAAGD,KAAJ,EAAWE,OAAX,EAAtB;EACA,MAAMC,WAAW,GAAGd,WAAW,CAACI,cAAD,CAA/B;EACA,MAAMW,UAAU,GAAGf,WAAW,CAACK,aAAD,CAA9B;EAGAH,SAAS,CAAC,MAAM;IACZ,IAAIY,WAAW,KAAK,MAApB,EAA4B;MACxBJ,QAAQ,CAACJ,UAAU,EAAX,CAAR;IACH;EACJ,CAJQ,EAIN,CAACQ,WAAD,EAAcJ,QAAd,CAJM,CAAT;EASA,IAAIM,YAAJ;;EACA,QAAQF,WAAR;IACI,KAAK,SAAL;MACIE,YAAY,gBAAG,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QAAf;MACA;;IACJ,KAAK,WAAL;MACIA,YAAY,GAAGJ,aAAa,CAACK,GAAd,CAAmBC,IAAI,iBAAI,QAAC,UAAD;QAA6B,IAAI,EAAIA;MAArC,GAAmBA,IAAI,CAACC,GAAxB;QAAA;QAAA;QAAA;MAAA,QAA3B,CAAf;MACA;;IACJ,KAAK,QAAL;MACIH,YAAY,gBAAG;QAAA,UAAID;MAAJ;QAAA;QAAA;QAAA;MAAA,QAAf;MACA;;IACJ;MACIC,YAAY,gBAAG,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QAAf;EAXR;;EAiBA,oBAEI;IAAA,UAICA;EAJD;IAAA;IAAA;IAAA;EAAA,QAFJ;AAcH,CAtDD;;GAAMP,S;UAKeR,W,EAEHD,W,EAEMA,W,EACDA,W;;;KAVjBS,S;AAwDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}