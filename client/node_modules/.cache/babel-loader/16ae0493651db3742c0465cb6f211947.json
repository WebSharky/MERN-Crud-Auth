{"ast":null,"code":"import { createSlice, nanoid, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nconst POSTS_URL = 'https://jsonplaceholder.typicode.com/posts';\nconst initialState = {\n  posts: [],\n  status: 'idle',\n  error: null\n};\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  try {\n    const response = await axios.get(POSTS_URL);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n});\nexport const addNewPost = createAsyncThunk('posts/addNewPost', async postToSubmit => {\n  try {\n    const response = await axios.get(POSTS_URL);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n});\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    postAdded: {\n      reducer(state, action) {\n        state.push(action.payload);\n      },\n\n      prepare(title, body, userId) {\n        return {\n          payload: {\n            id: nanoid(),\n            title,\n            body,\n            date: new Date().toISOString(),\n            userId\n          }\n        };\n      }\n\n    }\n  },\n\n  extraReducers(builder) {\n    builder.addCase(fetchPosts.pending, (state, action) => {\n      state.status = 'loading';\n    }).addCase(fetchPosts.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      const loadedPosts = action.payload.map(post => {\n        post.myMessage = `to moja wiadomość z ${new Date()}`;\n        return post;\n      });\n      state.posts = state.posts.concat(loadedPosts);\n    }).addCase(fetchPosts.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    });\n  }\n\n});\nexport const selectAllPosts = state => state.posts.posts;\nexport const getPostsStatus = state => state.posts.status;\nexport const getPostsError = state => state.posts.error;\nexport const {\n  postAdded\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","createAsyncThunk","axios","POSTS_URL","initialState","posts","status","error","fetchPosts","response","get","data","message","addNewPost","postToSubmit","postsSlice","name","reducers","postAdded","reducer","state","action","push","payload","prepare","title","body","userId","id","date","Date","toISOString","extraReducers","builder","addCase","pending","fulfilled","loadedPosts","map","post","myMessage","concat","rejected","selectAllPosts","getPostsStatus","getPostsError","actions"],"sources":["F:/PROJEKTY WWW/NEW_MERN_092022/client/src/features/posts/postsSlice.js"],"sourcesContent":["import { createSlice, nanoid, createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\nconst POSTS_URL = 'https://jsonplaceholder.typicode.com/posts'\r\n\r\nconst initialState = {\r\n   posts: [],\r\n   status: 'idle',\r\n   error: null\r\n}\r\n\r\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\r\n    try {\r\n        const response = await axios.get(POSTS_URL)\r\n        return response.data\r\n    } catch (error) {\r\n        return error.message\r\n    }\r\n})\r\n\r\nexport const addNewPost = createAsyncThunk('posts/addNewPost', async (postToSubmit) => {\r\n    try {\r\n        const response = await axios.get(POSTS_URL)\r\n        return response.data\r\n    } catch (error) {\r\n        return error.message\r\n    }\r\n})\r\n\r\n\r\n\r\nconst postsSlice = createSlice({\r\n    name: 'posts',\r\n    initialState,\r\n    reducers: {\r\n        postAdded: {\r\n            reducer(state, action) {\r\n                state.push(action.payload)\r\n                },\r\n            prepare(title, body, userId) {\r\n                return {\r\n                    payload: {\r\n                    id: nanoid(),\r\n                    title,\r\n                    body,\r\n                    date: new Date().toISOString(),\r\n                    userId,\r\n                }\r\n                }\r\n            }\r\n        },\r\n    },\r\n    extraReducers(builder) {\r\n        builder\r\n            .addCase(fetchPosts.pending, (state, action) => {\r\n                state.status = 'loading'\r\n            })\r\n            .addCase(fetchPosts.fulfilled, (state, action) => {\r\n                state.status = 'succeeded'\r\n                const loadedPosts = action.payload.map(post => {\r\n                    post.myMessage = `to moja wiadomość z ${new Date()}`\r\n                    return post\r\n                })\r\n                state.posts = state.posts.concat(loadedPosts)\r\n            })\r\n            .addCase(fetchPosts.rejected, (state, action) => {\r\n                state.status = 'failed'\r\n                state.error = action.error.message\r\n            })\r\n    }\r\n})\r\n\r\nexport const selectAllPosts = (state) => state.posts.posts\r\nexport const getPostsStatus = (state) => state.posts.status\r\nexport const getPostsError = (state) => state.posts.error\r\n\r\nexport const {postAdded} = postsSlice.actions\r\n\r\nexport default postsSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}