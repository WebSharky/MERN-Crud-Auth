{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/posts/'; // Create new goal\n\nconst createPost = async (postData, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.post(API_URL, postData, config);\n  return response.data;\n}; /// Chyba niepotrzebne bo to nie jest z tokenem\n// Get user goals\n\n\nconst getAllPosts = async () => {\n  const response = await axios.get(API_URL);\n  return response.data;\n};\n\nconst getPostsByUser = async nickname => {\n  const response = await axios.get(`${API_URL}/user-posts/${nickname}`);\n  return response.data;\n};\n\nconst updatePost = async (updatedPostData, id, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.patch(`${API_URL}${id}`, updatedPostData, config);\n  return response.data;\n};\n\nconst likePost = async _ref => {\n  let {\n    id,\n    nickname,\n    token\n  } = _ref;\n  const likeDetails = {\n    id,\n    nickname\n  };\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.patch(`${API_URL}${id}/like`, likeDetails, config);\n  return response.data;\n};\n\nconst deleteOwnedPost = async (postId, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  return await axios.delete(`${API_URL}${postId}`, config);\n};\n\nconst postsService = {\n  createPost,\n  getAllPosts,\n  getPostsByUser,\n  updatePost,\n  deleteOwnedPost,\n  likePost\n};\nexport default postsService;","map":{"version":3,"names":["axios","API_URL","createPost","postData","token","config","headers","Authorization","response","post","data","getAllPosts","get","getPostsByUser","nickname","updatePost","updatedPostData","id","patch","likePost","likeDetails","deleteOwnedPost","postId","delete","postsService"],"sources":["F:/PROJEKTY WWW/MERN_15/client/src/features/posts/postsService.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst API_URL = 'http://localhost:5000/api/posts/'\r\n\r\n// Create new goal\r\nconst createPost = async (postData, token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }\r\n\r\n  const response = await axios.post(API_URL, postData, config)\r\n\r\n  return response.data\r\n}\r\n\r\n\r\n/// Chyba niepotrzebne bo to nie jest z tokenem\r\n// Get user goals\r\nconst getAllPosts = async ( ) => {\r\n  const response = await axios.get(API_URL)\r\n  return response.data\r\n}\r\n\r\nconst getPostsByUser = async ( nickname ) => {\r\n  const response = await axios.get(`${API_URL}/user-posts/${nickname}`)\r\n  return response.data\r\n}\r\n\r\nconst updatePost = async(updatedPostData, id, token) => {\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }\r\n  const response = await axios.patch(`${API_URL}${id}`, updatedPostData, config)\r\n  return response.data\r\n}\r\n\r\nconst likePost = async({id, nickname, token}) => {\r\n\r\n  const likeDetails = {\r\n    id,\r\n    nickname\r\n  }\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }\r\n  const response = await axios.patch(`${API_URL}${id}/like`, likeDetails, config)\r\n  return response.data\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst deleteOwnedPost = async (postId, token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }\r\n  return await axios.delete(`${API_URL}${postId}`, config)\r\n}\r\n\r\nconst postsService = {\r\n  createPost,\r\n  getAllPosts,\r\n  getPostsByUser,\r\n  updatePost,\r\n  deleteOwnedPost,\r\n  likePost\r\n}\r\n\r\nexport default postsService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,kCAAhB,C,CAEA;;AACA,MAAMC,UAAU,GAAG,OAAOC,QAAP,EAAiBC,KAAjB,KAA2B;EAC5C,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASH,KAAM;IADxB;EADI,CAAf;EAMA,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAWR,OAAX,EAAoBE,QAApB,EAA8BE,MAA9B,CAAvB;EAEA,OAAOG,QAAQ,CAACE,IAAhB;AACD,CAVD,C,CAaA;AACA;;;AACA,MAAMC,WAAW,GAAG,YAAa;EAC/B,MAAMH,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAN,CAAUX,OAAV,CAAvB;EACA,OAAOO,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMG,cAAc,GAAG,MAAQC,QAAR,IAAsB;EAC3C,MAAMN,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAN,CAAW,GAAEX,OAAQ,eAAca,QAAS,EAA5C,CAAvB;EACA,OAAON,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMK,UAAU,GAAG,OAAMC,eAAN,EAAuBC,EAAvB,EAA2Bb,KAA3B,KAAqC;EAEtD,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASH,KAAM;IADxB;EADI,CAAf;EAKA,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACkB,KAAN,CAAa,GAAEjB,OAAQ,GAAEgB,EAAG,EAA5B,EAA+BD,eAA/B,EAAgDX,MAAhD,CAAvB;EACA,OAAOG,QAAQ,CAACE,IAAhB;AACD,CATD;;AAWA,MAAMS,QAAQ,GAAG,cAAgC;EAAA,IAA1B;IAACF,EAAD;IAAKH,QAAL;IAAeV;EAAf,CAA0B;EAE/C,MAAMgB,WAAW,GAAG;IAClBH,EADkB;IAElBH;EAFkB,CAApB;EAIA,MAAMT,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASH,KAAM;IADxB;EADI,CAAf;EAKA,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACkB,KAAN,CAAa,GAAEjB,OAAQ,GAAEgB,EAAG,OAA5B,EAAoCG,WAApC,EAAiDf,MAAjD,CAAvB;EACA,OAAOG,QAAQ,CAACE,IAAhB;AACD,CAbD;;AAuBA,MAAMW,eAAe,GAAG,OAAOC,MAAP,EAAelB,KAAf,KAAyB;EAC/C,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASH,KAAM;IADxB;EADI,CAAf;EAKA,OAAO,MAAMJ,KAAK,CAACuB,MAAN,CAAc,GAAEtB,OAAQ,GAAEqB,MAAO,EAAjC,EAAoCjB,MAApC,CAAb;AACD,CAPD;;AASA,MAAMmB,YAAY,GAAG;EACnBtB,UADmB;EAEnBS,WAFmB;EAGnBE,cAHmB;EAInBE,UAJmB;EAKnBM,eALmB;EAMnBF;AANmB,CAArB;AASA,eAAeK,YAAf"},"metadata":{},"sourceType":"module"}