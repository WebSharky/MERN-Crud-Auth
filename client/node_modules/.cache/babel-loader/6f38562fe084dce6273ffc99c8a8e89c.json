{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport usersService from './usersService';\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n}; // Register user\n\nexport const register = createAsyncThunk('user/register', async (user, thunkAPI) => {\n  try {\n    return await userService.register(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n}); // Login user\n\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n  try {\n    return await userService.login(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await userService.logout();\n});\nexport const usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n    });\n  }\n});\nexport const {\n  reset\n} = usersSlice.actions;\nexport default usersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","usersService","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","isLoading","message","register","thunkAPI","userService","error","response","data","toString","rejectWithValue","login","logout","usersSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["F:/PROJEKTY WWW/MERN_15/client/src/features/users/usersSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport usersService from './usersService'\r\n\r\n\r\nconst user = JSON.parse(localStorage.getItem('user'))\r\n\r\nconst initialState = {\r\n  user: user ? user : null,\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: '',\r\n}\r\n\r\n// Register user\r\nexport const register = createAsyncThunk(\r\n  'user/register',\r\n  async (user, thunkAPI) => {\r\n    try {\r\n      return await userService.register(user)\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString()\r\n      return thunkAPI.rejectWithValue(message)\r\n    }\r\n  }\r\n)\r\n\r\n// Login user\r\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\r\n  try {\r\n    return await userService.login(user)\r\n  } catch (error) {\r\n    const message =\r\n      (error.response && error.response.data && error.response.data.message) ||\r\n      error.message ||\r\n      error.toString()\r\n    return thunkAPI.rejectWithValue(message)\r\n  }\r\n})\r\n\r\nexport const logout = createAsyncThunk('auth/logout', async () => {\r\n  await userService.logout()\r\n})\r\n\r\nexport const usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => {\r\n      state.isLoading = false\r\n      state.isSuccess = false\r\n      state.isError = false\r\n      state.message = ''\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(register.pending, (state) => {\r\n        state.isLoading = true\r\n      })\r\n      .addCase(register.fulfilled, (state, action) => {\r\n        state.isLoading = false\r\n        state.isSuccess = true\r\n        state.user = action.payload\r\n      })\r\n      .addCase(register.rejected, (state, action) => {\r\n        state.isLoading = false\r\n        state.isError = true\r\n        state.message = action.payload\r\n        state.user = null\r\n      })\r\n      .addCase(login.pending, (state) => {\r\n        state.isLoading = true\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.isLoading = false\r\n        state.isSuccess = true\r\n        state.user = action.payload\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.isLoading = false\r\n        state.isError = true\r\n        state.message = action.payload\r\n        state.user = null\r\n      })\r\n      .addCase(logout.fulfilled, (state) => {\r\n        state.user = null\r\n      })\r\n  },\r\n})\r\n\r\nexport const { reset } = usersSlice.actions\r\nexport default usersSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}