{"ast":null,"code":"var _jsxFileName = \"F:\\\\PROJEKTY WWW\\\\MERN_15\\\\client\\\\src\\\\components\\\\PostsList.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { selectAllPosts, selectAllPostsOfUser, getPostsStatus, getPostsError, fetchPosts, fetchPostsByUser } from '../features/posts/postsSlice';\nimport PostExcerpt from \"./PostExcerpt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostsList = _ref => {\n  _s();\n\n  let {\n    mode\n  } = _ref;\n  const allPosts = useSelector(selectAllPosts);\n  const postsByUser = useSelector(selectAllPostsOfUser);\n  const posts = mode === 'allPosts' ? allPosts : postsByUser;\n  const dispatch = useDispatch();\n  const reversedPosts = [...posts].reverse();\n  const postsStatus = useSelector(getPostsStatus);\n  const postsError = useSelector(getPostsError);\n  useEffect(() => {\n    if (postsStatus === 'idle') {\n      dispatch(fetchPosts());\n    }\n  }, [postsStatus, dispatch]);\n  let postsContent;\n\n  switch (postsStatus) {\n    case 'loading':\n      postsContent = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\\"Loading...\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'succeeded':\n      postsContent = reversedPosts.map(post => /*#__PURE__*/_jsxDEV(PostExcerpt, {\n        post: post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 55\n      }, this));\n      break;\n\n    case 'failed':\n      postsContent = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: postsError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 28\n      }, this);\n      break;\n\n    default:\n      postsContent = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\\"Loading...default\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 28\n      }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"*** PostsList ***\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), postsContent, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"*** End of PostsList ***\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostsList, \"ttJZHhny0WY7g5fO5PiFhkv8Tbs=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector, useSelector];\n});\n\n_c = PostsList;\nexport default PostsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsList\");","map":{"version":3,"names":["useSelector","useDispatch","useEffect","selectAllPosts","selectAllPostsOfUser","getPostsStatus","getPostsError","fetchPosts","fetchPostsByUser","PostExcerpt","PostsList","mode","allPosts","postsByUser","posts","dispatch","reversedPosts","reverse","postsStatus","postsError","postsContent","map","post","_id"],"sources":["F:/PROJEKTY WWW/MERN_15/client/src/components/PostsList.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\"\r\nimport { useEffect } from \"react\"\r\nimport {selectAllPosts, selectAllPostsOfUser, getPostsStatus, getPostsError, fetchPosts, fetchPostsByUser} from '../features/posts/postsSlice'\r\n\r\nimport PostExcerpt from \"./PostExcerpt\"\r\n\r\n\r\n\r\nconst PostsList = ({mode}) => {\r\n\r\n    \r\n    const allPosts = useSelector(selectAllPosts)\r\n    const postsByUser = useSelector(selectAllPostsOfUser)\r\n\r\n    const posts = mode === 'allPosts'? allPosts : postsByUser \r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const reversedPosts = [...posts].reverse()\r\n    const postsStatus = useSelector(getPostsStatus)\r\n    const postsError = useSelector(getPostsError)\r\n\r\n  \r\n    useEffect(() => {\r\n        if (postsStatus === 'idle') {\r\n            \r\n            \r\n            dispatch(fetchPosts())\r\n\r\n\r\n        }\r\n    }, [postsStatus, dispatch])\r\n\r\n\r\n\r\n\r\n    let postsContent\r\n    switch (postsStatus) {\r\n        case 'loading':\r\n            postsContent = <p>\"Loading...\"</p>\r\n            break\r\n        case 'succeeded':\r\n            postsContent = reversedPosts.map( post => <PostExcerpt key = {post._id} post = {post}/>)\r\n            break\r\n        case 'failed':\r\n            postsContent = <p>{postsError}</p>\r\n            break\r\n        default:\r\n            postsContent = <p>\"Loading...default\"</p>\r\n           \r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <article>\r\n\r\n       \r\n        <h2>*** PostsList ***</h2>\r\n        {postsContent}\r\n        <h2>*** End of PostsList ***</h2>\r\n       \r\n        </article>\r\n\r\n\r\n\r\n    )\r\n} \r\n\r\nexport default PostsList"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAAQC,cAAR,EAAwBC,oBAAxB,EAA8CC,cAA9C,EAA8DC,aAA9D,EAA6EC,UAA7E,EAAyFC,gBAAzF,QAAgH,8BAAhH;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;;AAIA,MAAMC,SAAS,GAAG,QAAY;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EAG1B,MAAMC,QAAQ,GAAGZ,WAAW,CAACG,cAAD,CAA5B;EACA,MAAMU,WAAW,GAAGb,WAAW,CAACI,oBAAD,CAA/B;EAEA,MAAMU,KAAK,GAAGH,IAAI,KAAK,UAAT,GAAqBC,QAArB,GAAgCC,WAA9C;EAGA,MAAME,QAAQ,GAAGd,WAAW,EAA5B;EAEA,MAAMe,aAAa,GAAG,CAAC,GAAGF,KAAJ,EAAWG,OAAX,EAAtB;EACA,MAAMC,WAAW,GAAGlB,WAAW,CAACK,cAAD,CAA/B;EACA,MAAMc,UAAU,GAAGnB,WAAW,CAACM,aAAD,CAA9B;EAGAJ,SAAS,CAAC,MAAM;IACZ,IAAIgB,WAAW,KAAK,MAApB,EAA4B;MAGxBH,QAAQ,CAACR,UAAU,EAAX,CAAR;IAGH;EACJ,CARQ,EAQN,CAACW,WAAD,EAAcH,QAAd,CARM,CAAT;EAaA,IAAIK,YAAJ;;EACA,QAAQF,WAAR;IACI,KAAK,SAAL;MACIE,YAAY,gBAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAf;MACA;;IACJ,KAAK,WAAL;MACIA,YAAY,GAAGJ,aAAa,CAACK,GAAd,CAAmBC,IAAI,iBAAI,QAAC,WAAD;QAA8B,IAAI,EAAIA;MAAtC,GAAoBA,IAAI,CAACC,GAAzB;QAAA;QAAA;QAAA;MAAA,QAA3B,CAAf;MACA;;IACJ,KAAK,QAAL;MACIH,YAAY,gBAAG;QAAA,UAAID;MAAJ;QAAA;QAAA;QAAA;MAAA,QAAf;MACA;;IACJ;MACIC,YAAY,gBAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAf;EAXR;;EAiBA,oBAEI;IAAA,wBAGA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHA,EAICA,YAJD,eAKA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALA;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAcH,CA7DD;;GAAMV,S;UAGeV,W,EACGA,W,EAKHC,W,EAGGD,W,EACDA,W;;;KAbjBU,S;AA+DN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}