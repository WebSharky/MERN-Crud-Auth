{"ast":null,"code":"import { createSlice, nanoid, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nimport postsService from \"./postsService\";\nconst POSTS_URL = 'http://localhost:5000/api/posts';\nconst initialState = {\n  posts: [],\n  userPosts: [],\n  status: 'idle',\n  error: null,\n  createPostStatus: 'idle'\n};\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  try {\n    const response = await axios.get(POSTS_URL);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    return error.message;\n  }\n});\nexport const addNewPost = createAsyncThunk('posts/addNewPost', async (postData, thunkAPI) => {\n  try {\n    const token = thunkAPI.getState().users.user.token;\n    return await postsService.createPost(postData, token);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    postAdded: {\n      reducer(state, action) {\n        console.log(action.payload);\n        state.posts.concat([action.payload]);\n      },\n\n      prepare(title, text, image, author) {\n        return {\n          payload: {\n            _id: nanoid(),\n            title,\n            text,\n            author,\n            image,\n            createdAt: new Date().toISOString()\n          }\n        };\n      }\n\n    }\n  },\n\n  extraReducers(builder) {\n    builder.addCase(fetchPosts.pending, (state, action) => {\n      state.status = 'loading';\n    }).addCase(fetchPosts.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      const loadedPosts = action.payload.map(post => {\n        post.myMessage = `to moja wiadomość z ${new Date()}`;\n        return post;\n      });\n      state.posts = state.posts.concat(loadedPosts);\n    }).addCase(fetchPosts.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(addNewPost.pending, (state, action) => {\n      state.createPostStatus = 'loading';\n    }).addCase(addNewPost.fulfilled, (state, action) => {\n      state.createPostStatus = 'succeed';\n      state.posts.push(action.payload);\n    }).addCase(addNewPost.rejected, (state, action) => {\n      state.createPostStatus = 'failed';\n      state.error = action.error.message;\n    });\n  }\n\n});\nexport const selectAllPosts = state => state.posts.posts;\nexport const selectAllPostsOfUser = state => state.posts.userPosts;\nexport const getPostsStatus = state => state.posts.status;\nexport const getPostsError = state => state.posts.error;\nexport const {\n  postAdded\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","createAsyncThunk","axios","postsService","POSTS_URL","initialState","posts","userPosts","status","error","createPostStatus","fetchPosts","response","get","console","log","data","message","addNewPost","postData","thunkAPI","token","getState","users","user","createPost","toString","rejectWithValue","postsSlice","name","reducers","postAdded","reducer","state","action","payload","concat","prepare","title","text","image","author","_id","createdAt","Date","toISOString","extraReducers","builder","addCase","pending","fulfilled","loadedPosts","map","post","myMessage","rejected","push","selectAllPosts","selectAllPostsOfUser","getPostsStatus","getPostsError","actions"],"sources":["F:/PROJEKTY WWW/MERN_15/client/src/features/posts/postsSlice.js"],"sourcesContent":["import { createSlice, nanoid, createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport axios from 'axios'\r\nimport postsService from \"./postsService\";\r\n\r\n\r\nconst POSTS_URL = 'http://localhost:5000/api/posts'\r\n\r\n\r\nconst initialState = {\r\n   posts: [],\r\n   userPosts: [],\r\n   status: 'idle',\r\n   error: null,\r\n   createPostStatus: 'idle'\r\n}\r\n\r\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\r\n    try {\r\n        const response = await axios.get(POSTS_URL)\r\n        console.log(response)\r\n        return response.data\r\n    } catch (error) {\r\n        return error.message\r\n    }\r\n})\r\n\r\nexport const addNewPost = createAsyncThunk(\r\n    'posts/addNewPost',\r\n    async (postData, thunkAPI) => {\r\n      try {\r\n        const token = thunkAPI.getState().users.user.token\r\n        return await postsService.createPost(postData, token)\r\n      } catch (error) {\r\n        const message =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString()\r\n        return thunkAPI.rejectWithValue(message)\r\n      }\r\n    }\r\n  )\r\n\r\n\r\n\r\nconst postsSlice = createSlice({\r\n    name: 'posts',\r\n    initialState,\r\n    reducers: {\r\n        postAdded: {\r\n            reducer(state, action) {\r\n                console.log(action.payload)\r\n                state.posts.concat([action.payload])\r\n                },\r\n            prepare(title, text, image, author) {\r\n                return {\r\n                    payload: {\r\n                    _id: nanoid(),\r\n                    title,\r\n                    text,\r\n                    author,\r\n                    image,\r\n                    createdAt: new Date().toISOString()               \r\n                }\r\n                }\r\n            }\r\n        },\r\n    },\r\n    extraReducers(builder) {\r\n        builder\r\n            .addCase(fetchPosts.pending, (state, action) => {\r\n                state.status = 'loading'\r\n            })\r\n            .addCase(fetchPosts.fulfilled, (state, action) => {\r\n                state.status = 'succeeded'\r\n                \r\n                const loadedPosts = action.payload.map(post => {\r\n                    post.myMessage = `to moja wiadomość z ${new Date()}`\r\n                    return post\r\n                }\r\n                \r\n                )\r\n                state.posts = state.posts.concat(loadedPosts)\r\n            })\r\n            .addCase(fetchPosts.rejected, (state, action) => {\r\n                state.status = 'failed'\r\n                state.error = action.error.message\r\n            })\r\n            .addCase(addNewPost.pending, (state, action) => {\r\n                state.createPostStatus = 'loading'\r\n                \r\n            })\r\n            .addCase(addNewPost.fulfilled, (state, action) => {\r\n                state.createPostStatus = 'succeed'\r\n                \r\n               \r\n                    state.posts.push(action.payload)\r\n                \r\n                \r\n            })\r\n            .addCase(addNewPost.rejected, (state, action) => {\r\n                state.createPostStatus = 'failed'\r\n                state.error = action.error.message\r\n            })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n})\r\n\r\nexport const selectAllPosts = (state) => state.posts.posts\r\nexport const selectAllPostsOfUser = (state) => state.posts.userPosts\r\nexport const getPostsStatus = (state) => state.posts.status\r\nexport const getPostsError = (state) => state.posts.error\r\n\r\nexport const {postAdded} = postsSlice.actions\r\n\r\nexport default postsSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}