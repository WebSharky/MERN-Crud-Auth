{"ast":null,"code":"var _jsxFileName = \"F:\\\\PROJEKTY WWW\\\\MERN_15\\\\client\\\\src\\\\pages\\\\UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectAllPostsOfUser, getPostsStatus, getPostsError, fetchPostsByUser } from \"../features/posts/postsSlice\";\nimport SinglePost from \"./SinglePost\";\nimport Spinner from \"./Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserProfile = () => {\n  _s();\n\n  const params = useParams();\n  const {\n    nickname\n  } = params;\n  const dispatch = useDispatch();\n  const userPosts = useSelector(selectAllPostsOfUser);\n  const reversedPosts = [...userPosts].reverse();\n  const postsStatus = useSelector(getPostsStatus);\n  const postsError = useSelector(getPostsError);\n  useEffect(() => {\n    dispatch(fetchPostsByUser({\n      nickname\n    }));\n  }, [nickname, dispatch]); // useEffect(() => {\n  //     if (postsStatus === 'idle') {\n  //         dispatch(fetchPostsByUser({nickname}))\n  //     }\n  //     console.log(userPosts)\n  // }, [postsStatus, dispatch, nickname, params])\n\n  let postsContent;\n\n  switch (postsStatus) {\n    case 'loading':\n      postsContent = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'succeeded':\n      postsContent = reversedPosts.map(post => /*#__PURE__*/_jsxDEV(SinglePost, {\n        post: post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 55\n      }, this));\n      break;\n\n    case 'failed':\n      postsContent = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: postsError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 28\n      }, this);\n      break;\n\n    default:\n      postsContent = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 28\n      }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: `This is user's profile of ${nickname}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"User's photo or just user image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"User's description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This user has NUMBER_OF_POSTS posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), postsContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserProfile, \"Bz4jNko8qS1V9fjd84TpL3eSYu0=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = UserProfile;\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["useEffect","useDispatch","useParams","useSelector","selectAllPostsOfUser","getPostsStatus","getPostsError","fetchPostsByUser","SinglePost","Spinner","UserProfile","params","nickname","dispatch","userPosts","reversedPosts","reverse","postsStatus","postsError","postsContent","map","post","_id"],"sources":["F:/PROJEKTY WWW/MERN_15/client/src/pages/UserProfile.js"],"sourcesContent":["\r\nimport { useEffect } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectAllPostsOfUser, getPostsStatus, getPostsError, fetchPostsByUser } from \"../features/posts/postsSlice\"\r\nimport SinglePost from \"./SinglePost\"\r\nimport Spinner from \"./Spinner\"\r\n\r\n\r\nconst UserProfile = () => {\r\n\r\n    const params = useParams()\r\n    const { nickname } = params\r\n\r\n    const dispatch = useDispatch()\r\n    const userPosts = useSelector(selectAllPostsOfUser)\r\n    const reversedPosts = [...userPosts].reverse()\r\n    const postsStatus = useSelector(getPostsStatus)\r\n    const postsError = useSelector(getPostsError)\r\n\r\n  \r\n    useEffect(() => {\r\n        dispatch(fetchPostsByUser({nickname}))\r\n    }, [nickname, dispatch])\r\n\r\n    // useEffect(() => {\r\n    //     if (postsStatus === 'idle') {\r\n    //         dispatch(fetchPostsByUser({nickname}))\r\n    //     }\r\n    //     console.log(userPosts)\r\n    // }, [postsStatus, dispatch, nickname, params])\r\n\r\n\r\n\r\n\r\n    let postsContent\r\n    switch (postsStatus) {\r\n        case 'loading':\r\n            postsContent = <Spinner />\r\n            break\r\n        case 'succeeded':\r\n            postsContent = reversedPosts.map( post => <SinglePost key = {post._id} post = {post}/>)\r\n         \r\n            break\r\n        case 'failed':\r\n            postsContent = <p>{postsError}</p>\r\n            break\r\n        default:\r\n            postsContent = <p><Spinner /></p>\r\n           \r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <h1>{`This is user's profile of ${nickname}`}</h1>\r\n        <p>User's photo or just user image</p>\r\n        <p>User's description</p>\r\n\r\n        \r\n        <p>This user has NUMBER_OF_POSTS posts</p>\r\n        {postsContent}\r\n\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default UserProfile"],"mappings":";;;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,oBAAT,EAA+BC,cAA/B,EAA+CC,aAA/C,EAA8DC,gBAA9D,QAAsF,8BAAtF;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAGA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EAEtB,MAAMC,MAAM,GAAGT,SAAS,EAAxB;EACA,MAAM;IAAEU;EAAF,IAAeD,MAArB;EAEA,MAAME,QAAQ,GAAGZ,WAAW,EAA5B;EACA,MAAMa,SAAS,GAAGX,WAAW,CAACC,oBAAD,CAA7B;EACA,MAAMW,aAAa,GAAG,CAAC,GAAGD,SAAJ,EAAeE,OAAf,EAAtB;EACA,MAAMC,WAAW,GAAGd,WAAW,CAACE,cAAD,CAA/B;EACA,MAAMa,UAAU,GAAGf,WAAW,CAACG,aAAD,CAA9B;EAGAN,SAAS,CAAC,MAAM;IACZa,QAAQ,CAACN,gBAAgB,CAAC;MAACK;IAAD,CAAD,CAAjB,CAAR;EACH,CAFQ,EAEN,CAACA,QAAD,EAAWC,QAAX,CAFM,CAAT,CAZsB,CAgBtB;EACA;EACA;EACA;EACA;EACA;;EAKA,IAAIM,YAAJ;;EACA,QAAQF,WAAR;IACI,KAAK,SAAL;MACIE,YAAY,gBAAG,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QAAf;MACA;;IACJ,KAAK,WAAL;MACIA,YAAY,GAAGJ,aAAa,CAACK,GAAd,CAAmBC,IAAI,iBAAI,QAAC,UAAD;QAA6B,IAAI,EAAIA;MAArC,GAAmBA,IAAI,CAACC,GAAxB;QAAA;QAAA;QAAA;MAAA,QAA3B,CAAf;MAEA;;IACJ,KAAK,QAAL;MACIH,YAAY,gBAAG;QAAA,UAAID;MAAJ;QAAA;QAAA;QAAA;MAAA,QAAf;MACA;;IACJ;MACIC,YAAY,gBAAG;QAAA,uBAAG,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA;MAAH;QAAA;QAAA;QAAA;MAAA,QAAf;EAZR;;EAuBA,oBACI;IAAA,wBACA;MAAA,UAAM,6BAA4BP,QAAS;IAA3C;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHA,eAMA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANA,EAOCO,YAPD;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CA9DD;;GAAMT,W;UAEaR,S,EAGED,W,EACCE,W,EAEEA,W,EACDA,W;;;KATjBO,W;AAgEN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}