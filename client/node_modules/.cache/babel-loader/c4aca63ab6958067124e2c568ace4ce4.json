{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/posts/'; // Create new goal\n\nconst createPost = async (postData, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.post(API_URL, postData, config);\n  return response.data;\n}; /// Chyba niepotrzebne bo to nie jest z tokenem\n// Get user goals\n\n\nconst getAllPosts = async () => {\n  const response = await axios.get(API_URL);\n  return response.data;\n};\n\nconst getPostsByUser = async (req, res) => {\n  const {\n    nickname\n  } = req.params;\n  const response = await axios.get(`${API_URL}/user-posts/${nickname}`);\n  return response.data;\n};\n\nexport const getToursByUser = async (req, res) => {\n  const {\n    id\n  } = req.params;\n\n  if (!mongoose.Types.ObjectId.isValid(id)) {\n    return res.status(404).json({\n      message: \"User doesn't exist\"\n    });\n  }\n\n  const userTours = await TourModal.find({\n    creator: id\n  });\n  res.status(200).json(userTours);\n}; // Delete user goal\n\nconst deleteGoal = async (goalId, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.delete(API_URL + goalId, config);\n  return response.data;\n};\n\nconst postsService = {\n  createPost,\n  getAllPosts,\n  getUserPosts,\n  deleteGoal\n};\nexport default postsService;","map":{"version":3,"names":["axios","API_URL","createPost","postData","token","config","headers","Authorization","response","post","data","getAllPosts","get","getPostsByUser","req","res","nickname","params","getToursByUser","id","mongoose","Types","ObjectId","isValid","status","json","message","userTours","TourModal","find","creator","deleteGoal","goalId","delete","postsService","getUserPosts"],"sources":["F:/PROJEKTY WWW/MERN_15/client/src/features/posts/postsService.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst API_URL = 'http://localhost:5000/api/posts/'\r\n\r\n// Create new goal\r\nconst createPost = async (postData, token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }\r\n\r\n  const response = await axios.post(API_URL, postData, config)\r\n\r\n  return response.data\r\n}\r\n\r\n\r\n/// Chyba niepotrzebne bo to nie jest z tokenem\r\n// Get user goals\r\nconst getAllPosts = async ( ) => {\r\n  const response = await axios.get(API_URL)\r\n  return response.data\r\n}\r\n\r\nconst getPostsByUser = async ( req, res ) => {\r\n  const { nickname } = req.params\r\n  const response = await axios.get(`${API_URL}/user-posts/${nickname}`)\r\n  return response.data\r\n}\r\n\r\n\r\nexport const getToursByUser = async (req, res) => {\r\n  const { id } = req.params;\r\n  if (!mongoose.Types.ObjectId.isValid(id)) {\r\n    return res.status(404).json({ message: \"User doesn't exist\" });\r\n  }\r\n  const userTours = await TourModal.find({ creator: id });\r\n  res.status(200).json(userTours);\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// Delete user goal\r\nconst deleteGoal = async (goalId, token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }\r\n\r\n  const response = await axios.delete(API_URL + goalId, config)\r\n\r\n  return response.data\r\n}\r\n\r\nconst postsService = {\r\n  createPost,\r\n  getAllPosts,\r\n  getUserPosts,\r\n  deleteGoal\r\n}\r\n\r\nexport default postsService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,kCAAhB,C,CAEA;;AACA,MAAMC,UAAU,GAAG,OAAOC,QAAP,EAAiBC,KAAjB,KAA2B;EAC5C,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASH,KAAM;IADxB;EADI,CAAf;EAMA,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAWR,OAAX,EAAoBE,QAApB,EAA8BE,MAA9B,CAAvB;EAEA,OAAOG,QAAQ,CAACE,IAAhB;AACD,CAVD,C,CAaA;AACA;;;AACA,MAAMC,WAAW,GAAG,YAAa;EAC/B,MAAMH,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAN,CAAUX,OAAV,CAAvB;EACA,OAAOO,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMG,cAAc,GAAG,OAAQC,GAAR,EAAaC,GAAb,KAAsB;EAC3C,MAAM;IAAEC;EAAF,IAAeF,GAAG,CAACG,MAAzB;EACA,MAAMT,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAN,CAAW,GAAEX,OAAQ,eAAce,QAAS,EAA5C,CAAvB;EACA,OAAOR,QAAQ,CAACE,IAAhB;AACD,CAJD;;AAOA,OAAO,MAAMQ,cAAc,GAAG,OAAOJ,GAAP,EAAYC,GAAZ,KAAoB;EAChD,MAAM;IAAEI;EAAF,IAASL,GAAG,CAACG,MAAnB;;EACA,IAAI,CAACG,QAAQ,CAACC,KAAT,CAAeC,QAAf,CAAwBC,OAAxB,CAAgCJ,EAAhC,CAAL,EAA0C;IACxC,OAAOJ,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;MAAEC,OAAO,EAAE;IAAX,CAArB,CAAP;EACD;;EACD,MAAMC,SAAS,GAAG,MAAMC,SAAS,CAACC,IAAV,CAAe;IAAEC,OAAO,EAAEX;EAAX,CAAf,CAAxB;EACAJ,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,SAArB;AACD,CAPM,C,CAaP;;AACA,MAAMI,UAAU,GAAG,OAAOC,MAAP,EAAe5B,KAAf,KAAyB;EAC1C,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASH,KAAM;IADxB;EADI,CAAf;EAMA,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACiC,MAAN,CAAahC,OAAO,GAAG+B,MAAvB,EAA+B3B,MAA/B,CAAvB;EAEA,OAAOG,QAAQ,CAACE,IAAhB;AACD,CAVD;;AAYA,MAAMwB,YAAY,GAAG;EACnBhC,UADmB;EAEnBS,WAFmB;EAGnBwB,YAHmB;EAInBJ;AAJmB,CAArB;AAOA,eAAeG,YAAf"},"metadata":{},"sourceType":"module"}